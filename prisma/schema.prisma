generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verificationtokens")
}

model User {
  id        String    @id @default(cuid())
  email     String    @unique
  name      String?
  password  String
  role      String    @default("user")
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  accounts  Account[]
  recipes   Recipe[]
  sessions  Session[]

  @@map("users")
}

model Recipe {
  id           String   @id @default(cuid())
  slug         String   @unique
  title        String
  description  String
  ingredients  Json
  instructions String[]
  tags         String[]
  yield        String?
  prepTime     String?
  cookTime     String?
  image        String?
  visibility   String   @default("public")
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  authorId     String
  author       User     @relation(fields: [authorId], references: [id], onDelete: Cascade)

  @@map("recipes")
}
